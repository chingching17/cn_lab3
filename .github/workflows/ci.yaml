name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      working-directory: ./backend

    - name: Run tests
      run: npm run test
      working-directory: ./backend

    - name: Generate new coverage report
      run: npm run coverage > coverage_report.txt
      working-directory: ./backend

    - name: Upload new coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: ./backend/coverage_report.txt
    
    - name: Reset to previous commit to get coverage report
      run: |
        git reset --hard HEAD~1 
      working-directory: ./backend

    - name: Run tests for previous commit
      run: npm run test
      working-directory: ./backend

    - name: Generate previous coverage report
      run: npm run coverage > coverage_report.txt
      working-directory: ./backend

    - name: Download new coverage report
      uses: actions/download-artifact@v2
      with:
        name: coverage-report
        path: ./backend/new_coverage

    - name: Compare previous and new coverage reports
      run: |
        report1="./backend/coverage_report.txt"
        report2="./backend/new_coverage/coverage_report.txt"

        get_coverage_metrics() {
          grep -E "| % Stmts | % Branch | % Funcs | % Lines" "$1" | awk '{print $3, $5, $7, $9}'
        }
        
        compare_coverage_reports() {
          metrics1=$(get_coverage_metrics "$1")
          metrics2=$(get_coverage_metrics "$2")

          echo "Metrics Report 1: $metrics1"
          echo "Metrics Report 2: $metrics2"

          # 將 metrics1 和 metrics2 字串轉換為浮點數進行比較
          metrics1_float=$(echo "$metrics1" | tr -d '%' | awk '{print $1}')
          metrics2_float=$(echo "$metrics2" | tr -d '%' | awk '{print $1}')

          # 比較每個指標，如果 Report 2 的值更好，則輸出相應的信息
          if (( $(echo "$metrics2_float > $metrics1_float" | bc -l) )); then
              echo "Coverage improvement detected!"
          elif (( $(echo "$metrics2_float == $metrics1_float" | bc -l) )); then
              echo "Coverage remains the same."
          else
              echo "Coverage deterioration detected!"
              exit 1
          fi
        }

        compare_coverage_reports "$report1" "$report2"
  
    - name: Reset to current commit
      run: |
        echo $GITHUB_SHA
        git reset --hard $GITHUB_SHA
    
    # - name: Check code formatting
    #   run: npm run format:check
    #   working-directory: ./backend

    # - name: Format code
    #   if: failure()
    #   run: npm run format
    #   working-directory: ./backend

    # - name: Commit formatted code
    #   if: failure()
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
    #   run: |
    #     git config --local user.email "github-actions[bot]@users.noreply.github.com"
    #     git config --local user.name "github-actions[bot]"
    #     git commit -am "style: auto format code"
    #     git push
